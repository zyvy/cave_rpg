let xp = 0;
let health = 100;
let gold = 50;
let currentWeapon = 0;
let fighting;
let monsterHealth;
let inventory = ["–ø–∞–ª–∫–∞"];

const button1 = document.querySelector('#button1');
const button2 = document.querySelector("#button2");
const button3 = document.querySelector("#button3");
const text = document.querySelector("#text");
const image = document.querySelector("img");
const xpText = document.querySelector("#xpText");
const healthText = document.querySelector("#healthText");
const goldText = document.querySelector("#goldText");
const monsterStats = document.querySelector("#monsterStats");
const monsterName = document.querySelector("#monsterName");
const monsterHealthText = document.querySelector("#monsterHealth");
const weapons = [
  { name: '–ø–∞–ª–∫–∞', power: 5 },
  { name: '–Ω–æ–∂–∏–∫', power: 30 },
  { name: '–¥—É–±–∏–Ω–∞', power: 50 },
  { name: '–º–µ—á', power: 100 }
];
const monsters = [
  {
    name: "—Å–ª–∏–∑–µ–Ω—å",
    level: 2,
    health: 15
  },
  {
    name: "–≤–æ–ª–∫",
    level: 8,
    health: 60
  },
  {
    name: "–¥—Ä–∞–∫–æ–Ω",
    level: 20,
    health: 300
  }
]
const locations = [
    {
        name: "–ø–ª–æ—â–∞–¥—å –≥–æ—Ä–æ–¥–∞",
        "button text": ["–í –º–∞–≥–∞–∑–∏–Ω", "–í –ø–µ—â–µ—Ä—É", "–ö –¥—Ä–∞–∫–æ–Ω—É"],
        "button functions": [goStore, goCave, fightDragon],
        text: "–í—ã –Ω–∞ –≥–æ—Ä–æ–¥—Å–∫–æ–π –ø–ª–æ—â–∞–¥–∏. –í—ã –≤–∏–¥–µ—Ç–µ —É–∫–∞–∑–∞—Ç–µ–ª—å \"–¢–æ—Ä–≥–æ–≤–µ—Ü\".",
        "picture":"./img/01_town.jpg"
    },
    {
        name: "–ú–∞–≥–∞–∑–∏–Ω",
        "button text": ["10 –∑–¥–æ—Ä–æ–≤—å—è (10 –∑–æ–ª–æ—Ç–∞)", "–û—Ä—É–∂–∏–µ (30 –∑–æ–ª–æ—Ç–∞)", "–ù–∞ –≥–æ—Ä–æ–¥—Å–∫—É—é –ø–ª–æ—â–∞–¥—å"],
        "button functions": [buyHealth, buyWeapon, goTown],
        text: "–í—ã –∑–∞—à–ª–∏ –≤ –º–∞–≥–∞–∑–∏–Ω.",
        "picture":"./img/02_shop.jpg"
    },
    {
        name: "–ø–µ—â–µ—Ä–∞",
        "button text": ["–ù–∞–ø–∞—Å—Ç—å –Ω–∞ —Å–ª–∏–∑–Ω—è", "–ù–∞–ø–∞—Å—Ç—å –Ω–∞ –≤–æ–ª–∫–∞", "–ù–∞ –≥–æ—Ä–æ–¥—Å–∫—É—é –ø–ª–æ—â–∞–¥—å"],
        "button functions": [fightSlime, fightBeast, goTown],
        text: "–í—ã –∑–∞—à–ª–∏ –≤ –ø–µ—â–µ—Ä—É. –í–∞—Å –æ–∫—Ä—É–∂–∏–ª–∏ –º–æ–Ω—Å—Ç—Ä—ã.",
        "picture":"./img/03_cave.jpg"
    },
    {
        name: "–±–æ–π",
        "button text": ["–ê—Ç–∞–∫–∞", "–ó–∞—â–∏—Ç–∞", "–£–±–µ–∂–∞—Ç—å"],
        "button functions": [attack, dodge, goTown],
        text: "–í—ã —Å—Ä–∞–∂–∞–µ—Ç–µ—Å—å —Å –º–æ–Ω—Å—Ç—Ä–æ–º.",
        "picture":["./img/04_slimes.jpg",  "./img/04_wolf.jpg", "./img/04_dragon.jpg"]
    },
    {
        name: "–≤—Ä–∞–≥ –ø–æ–≤–µ—Ä–∂–µ–Ω",
        "button text": ["–ù–∞ –≥–æ—Ä–æ–¥—Å–∫—É—é –ø–ª–æ—â–∞–¥—å", "–ù–∞ –≥–æ—Ä–æ–¥—Å–∫—É—é –ø–ª–æ—â–∞–¥—å", "–ù–∞ –≥–æ—Ä–æ–¥—Å–∫—É—é –ø–ª–æ—â–∞–¥—å"],
        "button functions": [goTown, goTown, goTown],
        text: '–ú–æ–Ω—Å—Ç—Ä –∑–∞—Ö—Ä–∏–ø–µ–ª "–ì—Ä—Ä!" –∏ —É–º–µ—Ä. –í—ã –ø–æ–ª—É—á–∏–ª–∏ –æ–ø—ã—Ç –∏ –Ω–∞—à–ª–∏ –Ω–µ–º–Ω–æ–≥–æ –∑–æ–ª–æ—Ç–∞.',
        "picture":"./img/05_win.jpg"
    },
    {
        name: "—Å–º–µ—Ä—Ç—å",
        "button text": ["–ü–µ—Ä–µ–∏–≥—Ä–∞—Ç—å?", "–ü–µ—Ä–µ–∏–≥—Ä–∞—Ç—å?", "–ü–µ—Ä–µ–∏–≥—Ä–∞—Ç—å?"],
        "button functions": [restart, restart, restart],
        text: "–í—ã —É–º–µ—Ä–ª–∏. ‚ò†Ô∏è",
        "picture":"./img/06_death.jpg"
    },
    { 
        name: "–ø–æ–±–µ–¥–∞", 
        "button text": ["–ü–µ—Ä–µ–∏–≥—Ä–∞—Ç—å?", "–ü–µ—Ä–µ–∏–≥—Ä–∞—Ç—å?", "–ü–µ—Ä–µ–∏–≥—Ä–∞—Ç—å?"], 
        "button functions": [restart, restart, restart], 
        text: "–í—ã —É–±–∏–ª–∏ –¥—Ä–∞–∫–æ–Ω–∞!–í—ã –ø—Ä–æ—à–ª–∏ –∏–≥—Ä—É! üéâ",
        "picture":"./img/07_win.jpg" 
    },
    {
        name: "—Å—Ç—Ä–∞–Ω–Ω–∏–∫",
        "button text": ["2", "8", "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–æ—Ä–æ–¥—Å–∫—É—é –ø–ª–æ—â–∞–¥—å?"],
        "button functions": [pickTwo, pickEight, goTown],
        text: "–í—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏ —Å—Ç—Ä–∞–Ω–Ω–∏–∫–∞. –û–Ω –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Å—ã–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É. –û–Ω –∑–∞–≥–∞–¥–∞–µ—Ç 10 —á–∏—Å–µ–ª –æ—Ç 0 –¥–æ 10 –∞ –≤—ã –∑–∞–≥–∞–¥–∞–µ—Ç–µ –æ–¥–Ω–æ. –ï—Å–ª–∏ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ –≤–∞–º–∏ —á–∏—Å–ª–æ —Å–æ–≤–ø–∞–¥–µ—Ç —Å –æ–¥–Ω–∏–º –∏–∑ –∑–∞–≥–∞–¥–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–Ω–∏–∫–æ–º, —Ç–æ –≤—ã –ø–æ–±–µ–¥–∏–ª–∏!",
        "picture":"./img/08_stranger.jpg"
    }
];

// initialize buttons
button1.onclick = goStore;
button2.onclick = goCave;
button3.onclick = fightDragon;

function update(location) {
  monsterStats.style.display = "none";
  button1.innerText = location["button text"][0];
  button2.innerText = location["button text"][1];
  button3.innerText = location["button text"][2];
  button1.onclick = location["button functions"][0];
  button2.onclick = location["button functions"][1];
  button3.onclick = location["button functions"][2];
  if (location !==3){
  image.src = location["picture"];
  }
  text.innerText = location.text;
}

function goTown() {
  let rand = Math.floor(Math.random() * (3 - 1 + 1) + 1)
  if (rand == 2) {
    easterEgg()
  }
  update(locations[0]);
}

function goStore() {
  update(locations[1]);
}

function goCave() {
  update(locations[2]);
}

function buyHealth() {
  if (gold >= 10) {
    gold -= 10;
    health += 10;
    goldText.innerText = gold;
    healthText.innerText = health;
  } else {
    text.innerText = "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞.";
  }
}

function buyWeapon() {
  if (currentWeapon < weapons.length - 1) {
    if (gold >= 30) {
      gold -= 30;
      currentWeapon++;
      goldText.innerText = gold;
      let newWeapon = weapons[currentWeapon].name;
      text.innerText = "–¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å " + newWeapon + ".";
      inventory.push(newWeapon);
      text.innerText += " –í –≤–∞—à–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –µ—Å—Ç—å: " + inventory;
    } else {
      text.innerText = "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞.";
    }
  } else {
    text.innerText = "–£ –≤–∞—Å —É–∂–µ —Å–∞–º–æ–µ –º–æ—â–Ω–æ–µ –æ—Ä—É–∂–∏–µ!";
    button2.innerText = "–ü—Ä–æ–¥–∞—Ç—å –æ—Ä—É–∂–∏–µ –∑–∞ 15 –∑–æ–ª–æ—Ç–∞";
    button2.onclick = sellWeapon;
  }
}

function sellWeapon() {
  if (inventory.length > 1) {
    gold += 15;
    goldText.innerText = gold;
    let currentWeapon = inventory.shift();
    text.innerText = "–í—ã –ø—Ä–æ–¥–∞–ª–∏ " + currentWeapon + ".";
    text.innerText += " –í –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –æ—Å—Ç–∞–ª–æ—Å—å: " + inventory;
  } else {
    text.innerText = "–ù–µ–ª—å–∑—è –ø—Ä–æ–¥–∞–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ—Ä—É–∂–∏–µ!";
  }
}

function fightSlime() {
  fighting = 0;
  goFight();
}

function fightBeast() {
  fighting = 1;
  goFight();
}

function fightDragon() {
  fighting = 2;
  goFight();
}

function goFight() {
  update(locations[3]);
  monsterHealth = monsters[fighting].health;
  monsterStats.style.display = "block";
  monsterName.innerText = monsters[fighting].name;
  monsterHealthText.innerText = monsterHealth;
  console.log(fighting, typeof fighting)
  image.src = locations[3]["picture"][fighting];
}

function attack() {
  text.innerText = "–ú–æ–Ω—Å—Ç—Ä " + monsters[fighting].name + " –∞—Ç—Ç–∞–∫—É–µ—Ç.";
  text.innerText += " –í—ã –∞—Ç—Ç–∞–∫–æ–≤–∞–ª–∏ –º–æ–Ω—Å—Ç—Ä–∞ –≤–∞—à–µ–π " + weapons[currentWeapon].name + ".";
  health -= getMonsterAttackValue(monsters[fighting].level);
  if (isMonsterHit()) {
    monsterHealth -= weapons[currentWeapon].power + Math.floor(Math.random() * xp) + 1;    
  } else {
    text.innerText += " –í—ã –ø—Ä–æ–º–∞–∑–∞–ª–∏.";
  }
  healthText.innerText = health;
  monsterHealthText.innerText = monsterHealth;
  if (health <= 0) {
    lose();
  } else if (monsterHealth <= 0) {
    fighting === 2 ? winGame() : defeatMonster();
  }
  if (Math.random() <= .1 && inventory.length !== 1) {
    text.innerText += " –í–∞—à–µ –æ—Ä—É–∂–∏–µ - " + inventory.pop() + " —Å–ª–æ–º–∞–ª–æ—Å—å.";
    currentWeapon--;
  }
}

function getMonsterAttackValue(level) {
  const hit = (level * 5) - (Math.floor(Math.random() * xp));
  console.log(hit);
  return hit > 0 ? hit : 0;
}

function isMonsterHit() {
  return Math.random() > .2 || health < 20;
}

function dodge() {
  text.innerText = "–í—ã —É–≤–µ—Ä–Ω—É–ª–∏—Å—å –æ—Ç —É–¥–∞—Ä–∞ –º–æ–Ω—Å—Ç—Ä–∞ " + monsters[fighting].name;
}

function defeatMonster() {
  gold += Math.floor(monsters[fighting].level * 6.7);
  xp += monsters[fighting].level;
  goldText.innerText = gold;
  xpText.innerText = xp;
  update(locations[4]);
}

function lose() {
  update(locations[5]);
}

function winGame() {
  update(locations[6]);
}

function restart() {
  xp = 0;
  health = 100;
  gold = 50;
  currentWeapon = 0;
  inventory = ["–ø–∞–ª–∫–∞"];
  goldText.innerText = gold;
  healthText.innerText = health;
  xpText.innerText = xp;
  goTown();
}

function easterEgg() {
  update(locations[7]);
}

function pickTwo() {
  pick(2);
}

function pickEight() {
  pick(8);
}

function pick(guess) {
  let numbers = [];
  while (numbers.length < 10) {
    numbers.push(Math.floor(Math.random() * 11));
  }
  text.innerText = "–í—ã –≤—ã–±—Ä–∞–ª–∏ " + guess + ". –°—Ç—Ä–∞–Ω–Ω–∏–∫ –≤—ã–±—Ä–∞–ª:\n";
  for (let i = 0; i < 10; i++) {
    text.innerText += numbers[i] + "\n";
  }
  if (numbers.indexOf(guess) !== -1) {
    text.innerText += "–ï—Å—Ç—å! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 20 –∑–æ–ª–æ—Ç–∞!";
    gold += 20;
    goldText.innerText = gold;
  } else {
    text.innerText += "–ú–∏–º–æ! –í—ã —Ç–µ—Ä—è–µ—Ç–µ 10 –∑–¥–æ—Ä–æ–≤—å—è!";
    health -= 10;
    healthText.innerText = health;
    if (health <= 0) {
      lose();
    }
  }
  
}
